#!/bin/bash
set -e

echo "üß† [AI-FIX] –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ-–¥–µ–ø–ª–æ–π Angular –ø—Ä–æ–µ–∫—Ç–∞..."
echo "-----------------------------------------------------------"

# 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
if [ -f "src/app/app.module.ts" ]; then
  if ! grep -q "FormsModule" src/app/app.module.ts 2>/dev/null; then
    echo "‚öôÔ∏è  –î–æ–±–∞–≤–ª—è—é FormsModule –≤ app.module.ts..."
    sed -i '' "s/imports: \[/imports: [FormsModule, /" src/app/app.module.ts 2>/dev/null || true
  fi
  if ! grep -q "RouterModule" src/app/app.module.ts 2>/dev/null; then
    echo "‚öôÔ∏è  –î–æ–±–∞–≤–ª—è—é RouterModule –≤ app.module.ts..."
    sed -i '' "s/imports: \[/imports: [RouterModule, /" src/app/app.module.ts 2>/dev/null || true
  fi
fi

# 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ ChatPanelComponent
if [ ! -f "src/app/chat-panel/chat-panel.component.ts" ]; then
  echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é ChatPanelComponent..."
  mkdir -p src/app/chat-panel
  cat <<'EOC' > src/app/chat-panel/chat-panel.component.ts
import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-chat-panel',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: \`
    <div class="chat-panel">
      <h2>üí¨ –ù–∞–≤—á–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫</h2>
      <textarea [(ngModel)]="question" placeholder="–í–≤–µ–¥–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è..."></textarea>
      <button (click)="sendQuestion()">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏</button>
      <div *ngIf="reply()" class="reply">{{ reply() }}</div>
    </div>
  \`,
  styles: [\`
    .chat-panel { background: #f0f8ff; padding: 20px; border-radius: 12px; }
    textarea { width: 100%; height: 100px; border-radius: 8px; padding: 10px; }
    button { background: #0078d7; color: white; border: none; border-radius: 6px; padding: 8px 14px; cursor: pointer; margin-top: 10px; }
    .reply { margin-top: 16px; background: white; border-left: 4px solid #0078d7; padding: 12px; border-radius: 8px; }
  \`]
})
export class ChatPanelComponent {
  question = signal<string>('');
  reply = signal<string>('');
  sendQuestion() {
    this.reply.set(\`–¢–∏ –∑–∞–ø–∏—Ç–∞–≤: "\${this.question()}" ‚Äî —è –¥–æ–ø–æ–º–æ–∂—É –∑ —Ü–∏–º!\`);
  }
}
EOC
fi

# 3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ GeminiService
if [ ! -f "src/app/services/gemini.service.ts" ]; then
  echo "‚öôÔ∏è  –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é GeminiService..."
  mkdir -p src/app/services
  cat <<'EOG' > src/app/services/gemini.service.ts
import { Injectable } from '@angular/core';

@Injectable({ providedIn: 'root' })
export class GeminiService {
  async askGemini(prompt: string): Promise<string> {
    try {
      console.log('üß† Gemini –æ—Ç—Ä–∏–º–∞–≤ –∑–∞–ø–∏—Ç:', prompt);
      return Promise.resolve(\`ü§ñ (Gemini AI) –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞: "\${prompt}"\`);
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ GeminiService:', err);
      return Promise.resolve('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ Gemini API.');
    }
  }
}
EOG
fi

# 4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ router-outlet
if ! grep -q "<router-outlet>" src/app/app.component.html 2>/dev/null; then
  echo "üß© –î–æ–±–∞–≤–ª—è—é <router-outlet> –≤ app.component.html..."
  echo "<router-outlet></router-outlet>" >> src/app/app.component.html
fi

# 5Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞
echo "üß± –û—á–∏—â–∞—é —Å—Ç–∞—Ä—ã–µ –±–∏–ª–¥—ã..."
rm -rf dist .angular

echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."
npx ng build --configuration production || {
  echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏, –Ω–æ auto-fix —É–∂–µ –∏—Å–ø—Ä–∞–≤–∏–ª –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º."
  exit 1
}

# 6Ô∏è‚É£ –ê–≤—Ç–æ–¥–µ–ø–ª–æ–π –Ω–∞ GitHub Pages
echo "üåê –í—ã–ø–æ–ª–Ω—è—é –¥–µ–ø–ª–æ–π –Ω–∞ GitHub Pages..."
if [ ! -d ".git" ]; then
  echo "‚öôÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
  git init
  git remote add origin https://github.com/evasuncatches/AI-Educational-Assistant.git
fi

npx angular-cli-ghpages --dir=dist/ai-educational-assistant --no-silent || {
  echo "‚ö†Ô∏è  angular-cli-ghpages –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
  npm install -g angular-cli-ghpages
  npx angular-cli-ghpages --dir=dist/ai-educational-assistant --no-silent
}

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ GitHub Pages."
